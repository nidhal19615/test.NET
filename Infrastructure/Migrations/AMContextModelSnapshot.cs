// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AMContext))]
    partial class AMContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationCore.Domain.Cinema", b =>
                {
                    b.Property<int>("CinemaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CinemaId"));

                    b.Property<string>("Localisation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CinemaId");

                    b.ToTable("Cinemas");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Film", b =>
                {
                    b.Property<int>("FilmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FilmId"));

                    b.Property<DateTime>("DateRealisation")
                        .HasColumnType("datetime2");

                    b.Property<double>("Duree")
                        .HasColumnType("float");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TypeFilm")
                        .HasColumnType("int");

                    b.Property<double>("prix")
                        .HasColumnType("float");

                    b.HasKey("FilmId");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Projection", b =>
                {
                    b.Property<DateTime>("DateProjection")
                        .HasColumnType("datetime2");

                    b.Property<int>("FilmFK")
                        .HasColumnType("int");

                    b.Property<int>("SalleFK")
                        .HasColumnType("int");

                    b.Property<string>("TypeProjection")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DateProjection");

                    b.HasIndex("FilmFK");

                    b.HasIndex("SalleFK");

                    b.ToTable("Projections");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Salle", b =>
                {
                    b.Property<int>("SalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalleId"));

                    b.Property<int>("NbPlaces")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int>("SalleFK")
                        .HasColumnType("int");

                    b.HasKey("SalleId");

                    b.HasIndex("SalleFK");

                    b.ToTable("Salles");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Projection", b =>
                {
                    b.HasOne("ApplicationCore.Domain.Film", "Film")
                        .WithMany("Projections")
                        .HasForeignKey("FilmFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Domain.Salle", "Salle")
                        .WithMany("Projections")
                        .HasForeignKey("SalleFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("Salle");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Salle", b =>
                {
                    b.HasOne("ApplicationCore.Domain.Cinema", "Cinema")
                        .WithMany("Salles")
                        .HasForeignKey("SalleFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Cinema", b =>
                {
                    b.Navigation("Salles");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Film", b =>
                {
                    b.Navigation("Projections");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Salle", b =>
                {
                    b.Navigation("Projections");
                });
#pragma warning restore 612, 618
        }
    }
}
